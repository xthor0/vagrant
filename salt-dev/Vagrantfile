# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

# define a minion for each OS type
# don't use DHCP. I tried. It apparently doesn't work with VirtualBox. Stick with static IPs, as annoying as it is.
cluster = {
  "salt-master" => { :cpus => 1, :mem => 2048, :box => "geerlingguy/centos7" },
  "bionic" => { :cpus => 1, :mem => 1024, :box => "ubuntu/bionic64" },
  "stretch" => { :cpus => 1, :mem => 1024, :box => "debian/stretch64" },
  "buster" => { :cpus => 1, :mem => 1024, :box => "debian/buster64" },
  "centos7" => { :cpus => 1, :mem => 1024, :box => "geerlingguy/centos7" },
  "centos8" => { :cpus => 1, :mem => 1024, :box => "geerlingguy/centos8" }
}

box = {
  "bionic" => "ubuntu/bionic64",
  "stretch" => "debian/stretch64",
  "buster" => "debian/buster64",
  "centos7" => "geerlingguy/centos7",
  "centos8" => "geerlingguy/centos8"
}

subnet = "192.168.56"
minion_count = ENV['minions'] || 1
ostype = ENV['ostype'] || "centos7"

# generate random IP address end octet
r = Random.new

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.manage_guest = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true

  # salt-master is primary. gets built no matter what.
  config.vm.define "salt-master", primary: true do |master|
    master.vm.box = "#{box["centos7"]}"
    master.vm.hostname = "salt-master"
    master.hostmanager.aliases = %w(salt)
    master.vm.network :private_network, ip: subnet + ".10"
    master.vm.synced_folder "salt_root/", "/srv/salt/"
    master.vm.synced_folder "~/git/salt-top", "/srv/salt/states/"
    master.vm.provision "shell", inline: "bash /vagrant/provision/setup_master.sh"
    master.vm.provider :virtualbox do |vb, override|
      vb.customize ["modifyvm", :id, "--memory", "2048", "--cpus", "2", "--hwvirtex", "on"]
    end # end provider
  end # end salt-master
  
  # minions depend on OS environment variables, but have defaults pre-set
  (1..minion_count.to_i).each do |i|
    vmname = "#{ostype}" + "-n" + "#{i}"
    end_ip = r.rand(15..254)
    config.vm.define vmname do |node|
      node.vm.box = "#{box[ostype]}"
      node.vm.network :private_network, :ip => "#{subnet}" + "." + "#{end_ip}"
      node.vm.hostname = "#{vmname}"
      node.vm.provision "shell", inline: "bash /vagrant/provision/setup_minion.sh"
      node.vm.provider :virtualbox do |vb, override|
        vb.customize ["modifyvm", :id, "--memory", "1024", "--cpus", "1", "--hwvirtex", "on"]
      end # end provider
    end # end vm definition
  end # end minion_count loop
end # end overall config

